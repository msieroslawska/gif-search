{"version":3,"sources":["images/poweredByGiphy.gif","components/Gallery/index.tsx","pages/Trending.tsx","pages/Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Gallery","images","undefined","length","className","map","id","src","title","alt","TrendingPage","React","useState","setImages","fetchData","a","request","url","params","api_key","limit","axios","result","data","fixed_height","useEffect","onClick","SearchPage","searchQuery","setSearchQuery","q","value","onChange","e","newValue","currentTarget","App","basename","to","exact","path","giphyPoweredBy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fc84da6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/poweredByGiphy.89206ca8.gif\";","import React from 'react';\n\nimport './index.css';\nimport { Image } from '../../types';\n\ninterface Props {\n  images?: Image[];\n}\n\nexport const Gallery: React.FC<Props> = ({ images }) => {\n  if (images === undefined || images.length < 1) {\n    return null;\n  }\n\n  return (\n    <div className=\"Gallery\">\n      {images.map(({ id, src, title }) => (\n        <div key={id}>\n          <img src={src} alt={title} />\n          <p className=\"Gallery-caption\">{title}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nimport { Gallery } from '../components/Gallery';\nimport { GiphyResponse, Image } from '../types';\n\nexport const TrendingPage: React.FC = () => {\n  const [images, setImages] = React.useState<Image[]>();\n\n  const fetchData = async () => {\n    const request: AxiosRequestConfig = {\n      url: 'https://api.giphy.com/v1/gifs/trending',\n      params: {\n        api_key: 'NUK3B8h1yZAUoY6B5WV2jlimmkx61Ugf',\n        limit: 10,\n      }\n    }\n    const result: AxiosResponse<GiphyResponse> = await axios(request);\n    const images = result.data.data.map(({ id, images, title, url }) => ({\n      id,\n      src: images.fixed_height.url,\n      title,\n      url,\n    }));\n    setImages(images)\n  };\n\n  React.useEffect(() => {\n    void fetchData();\n  }, []);\n\n  return (\n    <>\n    <header className=\"App-header\">\n      Trending\n    </header>\n\n    <button onClick={fetchData} className=\"App-refresh\">\n      Refresh\n    </button>\n\n    <Gallery images={images} />\n  </>\n  )\n}\n","import React from 'react';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nimport { Gallery } from '../components/Gallery';\nimport { GiphyResponse, Image } from '../types';\n\nexport const SearchPage: React.FC = () => {\n  const [images, setImages] = React.useState<Image[]>();\n  const [searchQuery, setSearchQuery] = React.useState('');\n\n  const fetchData = async () => {\n    const request: AxiosRequestConfig = {\n      url: 'https://api.giphy.com/v1/gifs/search',\n      params: {\n        api_key: 'NUK3B8h1yZAUoY6B5WV2jlimmkx61Ugf',\n        limit: 10,\n        q: searchQuery,\n      }\n    }\n    const result: AxiosResponse<GiphyResponse> = await axios(request);\n    const images = result.data.data.map(({ id, images, title, url }) => ({\n      id,\n      src: images.fixed_height.url,\n      title,\n      url,\n    }));\n    setImages(images)\n  };\n\n  const handleInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const newValue = e.currentTarget.value;\n    setSearchQuery(newValue);\n  }\n\n  return (\n    <>\n    <header className=\"App-header\">\n      Search\n    </header>\n\n    <input value={searchQuery} onChange={handleInputChange} />\n\n    <button onClick={fetchData} className=\"App-refresh\">\n      Fetch\n    </button>\n\n    <Gallery images={images} />\n  </>\n  )\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport giphyPoweredBy from \"./images/poweredByGiphy.gif\";\nimport { TrendingPage } from \"./pages/Trending\";\nimport { SearchPage } from \"./pages/Search\";\n\nexport const App: React.FC = () => {\n  return (\n    <Router basename=\"/gif-search\">\n      <div className=\"App\">\n        <p>\n          <Link to=\"/\">Trending</Link>\n          {` | `}\n          <Link to=\"/search\">Search</Link>\n        </p>\n\n        <header className=\"App-header\">Giphy gallery</header>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <TrendingPage />\n          </Route>\n          <Route path=\"/search\">\n            <SearchPage />\n          </Route>\n        </Switch>\n\n        <img src={giphyPoweredBy} alt=\"Powered By Giphy\" />\n      </div>\n    </Router>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}